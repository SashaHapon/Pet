version: '4'

services:
  consumer:
    environment:
      - "KAFKA_HOST=kafka"
    build:
      context: consumer
      dockerfile: Dockerfile
    depends_on:
      - cloud-config
      - kafka
      - zookeeper
      - postgres
    networks:
      - common-network
    ports:
      - 8080:8080
  producer:
    environment:
      - "KAFKA_HOST=kafka"
    build:
      context: producer
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - zookeeper
    networks:
      - common-network
    ports:
      - 8081:8081
  cloud-config:
    build:
      context: cloud-config-server
      dockerfile: Dockerfile
    depends_on:
      - producer
    networks:
      - common-network
    ports:
      - 8888:8888

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - common-network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    networks:
      - common-network
    hostname: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  postgres:
      image: postgres:latest
      restart: always
      environment:
        - POSTGRES_PASSWORD=postgres
        - POSTGRES_USER=postgres
        - POSTGRES_DB=consumer_db
      ports:
        - 5432:5432
      networks:
        - common-network
      volumes:
        - postgres:/var/lib/postgresql/data

volumes:
  postgres:

networks:
  common-network:
    driver: bridge